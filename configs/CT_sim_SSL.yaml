model:
  base_learning_rate: 1.0e-06
  target: models.SSLDM.SSLDM
  params:
    linear_start: 0.0015
    linear_end: 0.0155
    log_every_t: 100
    timesteps: 1000
    loss_type: l2
    first_stage_key: image
    cond_stage_key: hint
    ckpt_path: #pretrained latent diffusion model with labeled dataset
    image_size: 128
    channels: 3
    concat_mode: true
    cond_stage_trainable: true
    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 128
        in_channels: 19
        out_channels: 3
        model_channels: 160
        attention_resolutions:
        - 16
        - 8
        num_res_blocks: 2
        channel_mult:
        - 1
        - 2
        - 4
        - 4
        num_head_channels: 32
    first_stage_config:
      target: ldm.models.autoencoder.VQModelInterface
      params:
        embed_dim: 3
        n_embed: 8192
        monitor: val/loss
        ckpt_path: #path to the pretrained VQ-VAE model
        ddconfig:
          double_z: false
          z_channels: 3
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity 
    cond_stage_config:
      target: models.class_util.dense_block
      params:
        hint_channels: 3
        model_channels: 16
        dims: 2
    cond_extracter_config:
      target: models.class_util.UNet
      params:
        in_channels: 3
        model_channels: 16
        out_channels: 3
        num_res_blocks: 2
        attention_resolutions: []
        dropout: 0.0
        num_classes: 3
        channel_mult: 
        - 1
        - 1
        - 2
        - 2
        num_head_channels: 16
        ckpt_path: #path to the pretrained cond_extracter model
data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 1
    wrap: false
    num_workers: 12
    train:
      target: data.CT_sim_SSCL.CT_sim_SRTrain_SSCL
      params:
        path_target:  #src dataset with intravenous administration of contrast agent (e.g train_iv)
        path_cond:  #src dataset without intravenous administration of contrast agent (e.g train_no_iv)
        path_cond_l:  #HU-transfomation dataset using Dataset_convert.py to get (e.g train_iv_match_r)
        path_label:  #label dataset converted from src iv labeled dataset (e.g train_iv_r_c2l)
        path_label_u:  #label dataset converted from src non-iv dataset (e.g train_no_iv_c2l)
    validation:
      target: data.CT_sim_SSCL.CT_sim_SRVal_SSCL
      params:
        path_target:
        path_cond: 
        path_cond_l: 
        path_label: 
        path_label_u: 
